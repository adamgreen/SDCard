==PerformanceTest
This sample program uses an updated SDFileSystem driver to create a 10MB file on the root of a SD card and then reads
it.  It displays the measured data rates obtained during these read/write operations.  It also dumps some of the core
properties of the SD card and a few internal SDFileSystem counters that help me determine how well it is working on
different devices.

===Important Notes!
* **Backup your data before running this test.** This is a beta quality driver with writes enabled so it could
  inadvertently destroy data by mistake.
* Your card must have at least 10MB of free space on it for the test to run successfully.
* The pre-built binary has been built to run on the Smoothie v1 hardware.
** It is built to be loaded into FLASH at an offset of 16K.  This makes it compatible with the boot loader typically
   used with Smoothieboards.
** This test is configured to communicate with the uSD socket on the Smoothieboard PCB itself.
** It outputs test progress and results to the serial port.  You need to have a FTDI (or similar) cable connected to the
   1x6 pin Serial header on the Smoothieboard.
* To see the test progress and results you should connect your favorite terminal emulator to your SmoothieBoard
  at **9600-N-8-1**.
* Once the firmware is loaded, just pressing the reset button should be enough to start the test running.

The [[https://github.com/adamgreen/SDCard/tree/master/bins | bins/ folder]] contains a pre-built
[[https://github.com/adamgreen/SDCard/blob/master/bins/PerformanceTest-Smoothie1.bin?raw=true | PerformanceTest-Smoothie1.bin binary]]
that it is ready to be installed on a SmoothieBoard via its boot loader.

If you encounter failures:
* Create an issue [[https://github.com/adamgreen/SDCard/issues | here on GitHub]].
* Include all of the serial output generated by the test when it was run against the failing card.
* Describe the card as best as you can (brand, capacity, etc.)
* Please note if there is anything out of the ordinary with respect to your Smoothieboard setup.

Thanks for your help! I really appreciate it!

Example output when run on a **ADATA 8GB microSDHC Card Speed Class 4 (4 MB/sec)** card:
{{{
Cleanup from previous test run.
Dumping SD CID register contents.
  CID = 0x1D 0x41 0x44 0x53 0x44 0x20 0x20 0x20 0x02 0xB6 0x54 0x59 0x30 0x00 0xF2 0xB3
          Manufacturer ID: 0x1D
                   OEM ID: AD
             Product Name: SD
         Product Revision: 0.2
    Product Serial Number: 0xB6545930
       Manufacturing Date: February 2015
                 Checksum: 0x59
Dumping SD OCR register contents.
  OCR = 0xC0FF8000
          Card Power Up Status: 1
          Card Capacity Status: 1
            UHS-II Card Status: 0
    Switching to 1.8V Accepted: 0
                    2.7 - 2.8V: 1
                    2.8 - 2.9V: 1
                    2.9 - 3.0V: 1
                    3.0 - 3.1V: 1
                    3.1 - 3.2V: 1
                    3.2 - 3.3V: 1
                    3.3 - 3.4V: 1
                    3.4 - 3.5V: 1
                    3.5 - 3.6V: 1
Dumping SD CSD register contents.
  CSD = 0x40 0x0E 0x00 0x32 0x5B 0x59 0x00 0x00 0x3A 0xDD 0x7F 0x80 0x0A 0x40 0x00 0xA9
    CSD Version: 2.0
                  Data Read Access-Time: 0x0E (1ms)
    Data Read Access-Time in CLK cycles: 0
                      Max Transfer Rate: 25.0MHz
                  Card Command Class  0: yes
                  Card Command Class  1: no
                  Card Command Class  2: yes
                  Card Command Class  3: no
                  Card Command Class  4: yes
                  Card Command Class  5: yes
                  Card Command Class  6: no
                  Card Command Class  7: yes
                  Card Command Class  8: yes
                  Card Command Class  9: no
                  Card Command Class 10: yes
                  Card Command Class 11: no
             Max Read Data Block Length: 512
        Partial Blocks for Read Allowed: no
               Write Block Misalignment: no
                Read Block Misalignment: no
                        DSR Implemented: no
                            Device Size: 7715840 bytes
              Erase Single Block Enable: 512 bytes
        Erase Sector Size (SECTOR_SIZE): 128
               Write Protect Group Size: 0
             Write Protect Group Enable: no
                     Write Speed Factor: 4
            Max Write Data Block Length: 512
       Partial Blocks for Write Allowed: no
                      File Format Group: 0
                              Copy Flag: original
             Permanent Write Protection: 0
             Temporary Write Protection: 0
                            File Format: 0
                                    CRC: 0x54
Performing write test of 10485760 bytes...
    1.73 MB/second.
Performing read test of 10485760 bytes...
    1.68 MB/second.
Validating data on disk.
Validated 10485760 bytes.
Removing test file.
SD Card Driver Counters
    maximumWaitWhileBusyTime = 96
    maximumWaitForR1ResponseLoopCount = 1
    maximumACMD41LoopTime = 1
    maximumReceiveDataBlockWaitTime = 1
    cmd12PaddingByteRequiredCount = 1252
Test Completed!
}}}



==Initial PerformanceTest Results
These are the results from the first set of runs that people did with the PerformanceTest binaries. The driver has
since been updated and the results have therefore changed but this gives some history of where we started and why some
changes were made.

===Throughput Measurements
|= Card                                   |= Manufacturing Date |= Write Speed (MB/s) |= Read Speed (MB/s) |
| SanDisk Ultra 32GB microSD HC I Class 1 | December 2012       | 1.61                | 1.68               |
| SanDisk Mobile Ultra 16GB MicroSD HC I  | November 2011       | 1.74                | 1.64               |
| ADATA 8GB microSDHC Card Speed Class 4  | February 2015       | 1.54                | 1.67               |
| SanDisk 2GB MicroSD - SDSC              | August 2007         | 1.19                | 1.10               |
| Wolfman #1 - PH 4 GB                    | January 2014        | 0.85                | 1.64               |
| Wolfman #2 - TM 8 GB                    | April 2015          | 1.60                | 1.55               |
| SanDisk 4GB                             | March 2014          | 1.77                | 1.64               |
| Adata 8GB                               | February 2015       | 1.74                | 1.66               |
| Kingston 2GB                            | September 2008      | 1.59                | 1.64               |
| Sandisk 1GB                             | January 2007        | 1.76                | 1.64               |

===Extra SPI Exchanges
There were some places in ChaN's code which performed an extra SPI byte transfer in the select() code path and after
issuing a CMD12 command. I didn't see anything in the SD specification which called these out explicitly so I kept them
in my version and added instrumentation to count when they most likely were required. The following table shows those
counts. Based on these results I looked more closely at the code and realized that toggling the chip select signal
before sending CMD12 would probably reduce the requirement for the select() dummy read. When I made that change, it
seems to have eliminated the need for it. I haven't seen the counter produce a non-zero value since. It also improved
the read performance by about 10%. The extra dummy read for the CMD12 itself does appear to be required. At some point
in the future I will probably remove the CMD12 counter and eliminate the select() dummy read and its associated counter.

|= Card                                   |= selectFirstExchangeRequiredCount |= cmd12PaddingByteRequiredCount |
| SanDisk Ultra 32GB microSD HC I Class 1 | 1004                              | 1004                           |
| SanDisk Mobile Ultra 16GB MicroSD HC I  | 1280                              | 1280                           |
| ADATA 8GB microSDHC Card Speed Class 4  |                                   | 1252                           |
| SanDisk 2GB MicroSD - SDSC              | 5120                              | 5120                           |
| Wolfman #1 - PH 4 GB                    | 1134                              | 1134                           |
| Wolfman #2 - TM 8 GB                    | 1278                              | 1278                           |
| SanDisk 4GB                             | 1280                              | 1280                           |
| Adata 8GB                               |                                   | 1246                           |
| Kingston 2GB                            |                                   | 1278                           |
| Sandisk 1GB                             | 1280                              | 1280                           |

===Wait Times
There are some places that the code loops waiting for the card to respond. The following table shows that the cards
tested are way within the limits used by the current code:\\
**waitWhileBusyTime:** 500ms\\
**R1 Response:** 10 iterations\\
**ACMD41 Wait Time:** 1000ms\\
**ReceiveDataBlockWaitTime:** 500ms\\

|= Card                                   |= waitWhileBusyTime (ms) |= R1ResponseLoopCount |= ACMD41WaitTime (ms) |= ReceiveDataBlockWaitTime (ms) |
| SanDisk Ultra 32GB microSD HC I Class 1 | 14                      | 2                    | 5                    |                                |
| SanDisk Mobile Ultra 16GB MicroSD HC I  | 93                      | 2                    | 15                   | 2                              |
| ADATA 8GB microSDHC Card Speed Class 4  | 96                      | 1                    | 1                    | 1                              |
| SanDisk 2GB MicroSD - SDSC              | 21                      | 2                    | 3                    | 1                              |
| Wolfman #1 - PH 4 GB                    | 145                     | 1                    | 1                    |                                |
| Wolfman #2 - TM 8 GB                    | 33                      | 2                    | 22                   | 2                              |
| SanDisk 4GB                             | 54                      | 2                    | 22                   |                                |
| Adata 8GB                               | 15                      | 1                    | 1                    | 1                              |
| Kingston 2GB                            | 174                     | 2                    | 62                   |                                |
| Sandisk 1GB                             | 76                      | 2                    | 3                    | 1                              |

===Retries
There is code in the driver to retry in certain failure scenarios:
* CRC errors on sent commands
* Errors when reading block data
* Errors when writing block data

The counters for all of these retries was 0 on the cards tested so far.
